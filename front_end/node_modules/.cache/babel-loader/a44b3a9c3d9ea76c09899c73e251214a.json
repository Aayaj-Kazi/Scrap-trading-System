{"ast":null,"code":"var _jsxFileName = \"G:\\\\project_main\\\\Scrap-trading-System\\\\front_end\\\\src\\\\Component\\\\LoginComponent.jsx\";\nimport React, { Component } from 'react';\nimport AuthenticationService from '../services/AuthenticationService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeUsername = event => {\n      this.setState({\n        username: event.target.value\n      });\n    };\n\n    this.handleChangePassword = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.state = {\n      username: 'haneef',\n      password: '123',\n      hasLoginFailed: false,\n      showSuccessMessage: false\n    };\n    this.handleChangeUsername = this.handleChangeUsername.bind(this);\n    this.handleChangePassword = this.handleChangePassword.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  }\n\n  loginClicked() {\n    //in28minutes,dummy\n    // if(this.state.username==='in28minutes' && this.state.password==='dummy'){\n    //     AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password)\n    //     this.props.history.push(`/courses`)\n    //     //this.setState({showSuccessMessage:true})\n    //     //this.setState({hasLoginFailed:false})\n    // }\n    // else {\n    //     this.setState({showSuccessMessage:false})\n    //     this.setState({hasLoginFailed:true})\n    // }\n    AuthenticationService.processLoginForm(this.state.username, this.state.password).then(() => {\n      //AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password)\n      this.props.history.push(`/addScrapPost`);\n    }).catch(() => {\n      this.setState({\n        showSuccessMessage: false\n      });\n      this.setState({\n        hasLoginFailed: true\n      });\n    }); // AuthenticationService\n    //     .executeJwtAuthenticationService(this.state.username, this.state.password)\n    //     .then((response) => {\n    //         AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token)\n    //         this.props.history.push(`/courses`)\n    //     }).catch(() => {\n    //         this.setState({ showSuccessMessage: false })\n    //         this.setState({ hasLoginFailed: true })\n    //     })\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"Post\",\n          children: [this.state.hasLoginFailed && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-warning\",\n            children: \"Invalid Credentials\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 51\n          }, this), this.state.showSuccessMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Login Sucessful\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 55\n          }, this), \"User Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            value: this.state.username,\n            onChange: this.handleChangeUsername\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 134\n          }, this), \"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            value: this.state.password,\n            onChange: this.handleChangePassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 137\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: this.loginClicked,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LoginComponent;","map":{"version":3,"sources":["G:/project_main/Scrap-trading-System/front_end/src/Component/LoginComponent.jsx"],"names":["React","Component","AuthenticationService","LoginComponent","constructor","props","handleChangeUsername","event","setState","username","target","value","handleChangePassword","password","state","hasLoginFailed","showSuccessMessage","bind","loginClicked","processLoginForm","then","history","push","catch","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport AuthenticationService from '../services/AuthenticationService';\r\n\r\nclass LoginComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            username: 'haneef',\r\n            password: '123',\r\n            hasLoginFailed: false,\r\n            showSuccessMessage: false\r\n        }\r\n\r\n        this.handleChangeUsername = this.handleChangeUsername.bind(this)\r\n        this.handleChangePassword = this.handleChangePassword.bind(this)\r\n        this.loginClicked = this.loginClicked.bind(this)\r\n    }\r\n\r\n    handleChangeUsername=(event)=> {\r\n        this.setState(\r\n            {\r\n                \r\n                  username  : event.target.value\r\n            }\r\n        )\r\n    };\r\n\r\n    \r\n\r\n    handleChangePassword= (event)=> {\r\n        this.setState(\r\n            {\r\n                password\r\n                    : event.target.value\r\n            }\r\n        )\r\n    };\r\n\r\n    loginClicked() {\r\n        //in28minutes,dummy\r\n        // if(this.state.username==='in28minutes' && this.state.password==='dummy'){\r\n        //     AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password)\r\n        //     this.props.history.push(`/courses`)\r\n        //     //this.setState({showSuccessMessage:true})\r\n        //     //this.setState({hasLoginFailed:false})\r\n        // }\r\n        // else {\r\n        //     this.setState({showSuccessMessage:false})\r\n        //     this.setState({hasLoginFailed:true})\r\n        // }\r\n       \r\n        AuthenticationService\r\n            .processLoginForm(this.state.username, this.state.password)\r\n            .then(() => {\r\n                //AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password)\r\n                this.props.history.push(`/addScrapPost`)\r\n            }).catch(() => {\r\n                this.setState({ showSuccessMessage: false })\r\n                this.setState({ hasLoginFailed: true })\r\n            })\r\n\r\n        // AuthenticationService\r\n        //     .executeJwtAuthenticationService(this.state.username, this.state.password)\r\n        //     .then((response) => {\r\n        //         AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token)\r\n        //         this.props.history.push(`/courses`)\r\n        //     }).catch(() => {\r\n        //         this.setState({ showSuccessMessage: false })\r\n        //         this.setState({ hasLoginFailed: true })\r\n        //     })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Login</h1>\r\n                <div className=\"container\">\r\n                    <form action='Post'>\r\n                    {/*<ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed}/>*/}\r\n                    {this.state.hasLoginFailed && <div className=\"alert alert-warning\">Invalid Credentials</div>}\r\n                    {this.state.showSuccessMessage && <div>Login Sucessful</div>}\r\n                    {/*<ShowLoginSuccessMessage showSuccessMessage={this.state.showSuccessMessage}/>*/}\r\n                    User Name: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChangeUsername} /><br></br>\r\n                    Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChangePassword} /><br></br>\r\n                    <button className=\"btn btn-success\" onClick={this.loginClicked}>Login</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginComponent"]},"metadata":{},"sourceType":"module"}